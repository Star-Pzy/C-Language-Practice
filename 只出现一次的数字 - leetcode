给你一个 非空 整数数组 nums ，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。

你必须设计并实现线性时间复杂度的算法来解决此问题，且该算法只使用常量额外空间。

 

示例 1 ：

输入：nums = [2,2,1]
输出：1
示例 2 ：

输入：nums = [4,1,2,1,2]
输出：4
示例 3 ：

输入：nums = [1]
输出：1

int singleNumber(int* nums, int numsSize) {
    int i = 0;
    int tmp = 0;
    int j = 0;
    for(i=0;i<numsSize;i++)
    {
        tmp = nums[i];
        if(i==numsSize-1)
        return nums[i];
        for(j=0;j<numsSize;j++)
        {
            if(i==j)
            continue;
            if(tmp == nums[j])
            break;
            if((j==numsSize-1)&&(tmp!=nums[j]))
            return tmp;
        }
    }
    return 0;
}
